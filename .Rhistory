setwd('/Users/Chase/GitHub/Datasets/House Prices/')
library(randomForest)
train <- read.csv("train.csv", stringsAsFactors=FALSE)
test  <- read.csv("test.csv",  stringsAsFactors=FALSE)
name[train]
names(train)
library(readr)
library(randomForest)
library(caret)
install.packages("caret")
install.packages("caret")
library(readr)
library(randomForest)
library(caret)
train <- read.csv("train.csv", stringsAsFactors=FALSE)
test  <- read.csv("test.csv",  stringsAsFactors=FALSE)
names(train)
train$paved[train$Street == "Pave"] <- 1
train$paved[train$Street != "Pave"] <- 0
table(train$LotShape)
train$regshape[train$LotShape == "Reg"] <- 1
train$regshape[train$LotShape != "Reg"] <- 0
table(train$LandContour)
#GTFO NAs
train$GarageYrBlt[is.na(train$GarageYrBlt)] <- 0
train$MasVnrArea[is.na(train$MasVnrArea)] <- 0
train$LotFrontage[is.na(train$LotFrontage)] <- 0
#Interactions based on correlation
train$year_qual <- train$YearBuilt*train$OverallQual #overall condition
train$year_r_qual <- train$YearRemodAdd*train$OverallQual #quality x remodel
train$qual_bsmt <- train$OverallQual*train$TotalBsmtSF #quality x basement size
train$livarea_qual <- train$OverallQual*train$GrLivArea #quality x living area
train$qual_bath <- train$OverallQual*train$FullBath #quality x baths
train$qual_ext <- train$OverallQual*train$exterior_cond #quality x exterior
#partition that data
partition <- createDataPartition(y=train$SalePrice,
p=.8,
list=F)
training <- train[partition,]
testing <- train[-partition,]
testing <- train[-partition,]
#randomForest Model
rf <- randomForest(SalePrice ~ ., data=training)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
train <- na.omit(train)
#Interactions based on correlation
train$year_qual <- train$YearBuilt*train$OverallQual #overall condition
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
warnings()
str(train)
str(train)
str(train)
str(train)
train[] <- lapply(train, factor)
str(train)
#reformatting some character variables that could easily be numeric
train$paved[train$Street == "Pave"] <- 1
train$paved[train$Street != "Pave"] <- 0
war
train$regshape[train$LotShape == "Reg"] <- 1
train$regshape[train$LotShape != "Reg"] <- 0
#GTFO NAs
train$GarageYrBlt[is.na(train$GarageYrBlt)] <- 0
train$MasVnrArea[is.na(train$MasVnrArea)] <- 0
train$LotFrontage[is.na(train$LotFrontage)] <- 0
train <- na.omit(train)
#Interactions based on correlation
train$year_qual <- train$YearBuilt*train$OverallQual #overall condition
train$year_r_qual <- train$YearRemodAdd*train$OverallQual #quality x remodel
train$qual_bsmt <- train$OverallQual*train$TotalBsmtSF #quality x basement size
library(readr)
library(randomForest)
library(caret)
train <- read.csv("train.csv", stringsAsFactors=True)
train <- read.csv("train.csv", stringsAsFactors=TRUE)
test  <- read.csv("test.csv",  stringsAsFactors=TRUE)
#Alley, PoolQC, Fence and MiscFeature have WAY more nulls than the other variables (>1000), so remove them
train<- train[,-c(7,73,74,75)]
str(train)
#reformatting some character variables that could easily be numeric
train$paved[train$Street == "Pave"] <- 1
train$paved[train$Street != "Pave"] <- 0
war
train$regshape[train$LotShape == "Reg"] <- 1
train$paved[train$Street != "Pave"] <- 0
train$regshape[train$LotShape == "Reg"] <- 1
train$regshape[train$LotShape != "Reg"] <- 0
#GTFO NAs
train$GarageYrBlt[is.na(train$GarageYrBlt)] <- 0
train$MasVnrArea[is.na(train$MasVnrArea)] <- 0
train$LotFrontage[is.na(train$LotFrontage)] <- 0
train <- na.omit(train)
#Interactions based on correlation
train$year_qual <- train$YearBuilt*train$OverallQual #overall condition
train$year_r_qual <- train$YearRemodAdd*train$OverallQual #quality x remodel
train$qual_bsmt <- train$OverallQual*train$TotalBsmtSF #quality x basement size
train$livarea_qual <- train$OverallQual*train$GrLivArea #quality x living area
train$qual_bath <- train$OverallQual*train$FullBath #quality x baths
#partition that data
partition <- createDataPartition(y=train$SalePrice,
p=.8,
list=F)
training <- train[partition,]
testing <- train[-partition,]
#randomForest Model
rf <- randomForest(SalePrice ~ ., data=training)
# Predict using the test set (code adapted from public Kaggle script in forums)
prediction <- predict(rf, testing)
model_output <- cbind(testing, prediction)
model_output$log_prediction <- log(model_output$prediction)
model_output$log_SalePrice <- log(model_output$SalePrice)
rmse(model_output$log_SalePrice,model_output$log_prediction)
#Test with RMSE
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
View(train)
View(Test_Inner)
library(readr)
library(randomForest)
library(caret)
train <- read.csv("train.csv", stringsAsFactors=TRUE)
test  <- read.csv("test.csv",  stringsAsFactors=TRUE)
#Alley, PoolQC, Fence and MiscFeature have WAY more nulls than the other variables (>1000), so remove them
train<- train[,-c(7,73,74,75)]
nzv <- nearZeroVar(train, saveMetrics= TRUE)
dim[train]
ncol(train)
train <- train[nzv == FALSE]
ncol(train)
str(train)
ncol(train)
library(readr)
library(randomForest)
library(caret)
train <- read.csv("train.csv", stringsAsFactors=TRUE)
test  <- read.csv("test.csv",  stringsAsFactors=TRUE)
#Alley, PoolQC, Fence and MiscFeature have WAY more nulls than the other variables (>1000), so remove them
train<- train[,-c(7,73,74,75)]
ncol(train)
nzv <- nearZeroVar(train, saveMetrics= TRUE)
badCols <- nearZeroVar(train)
train <- train[, -badCols]
ncol(train)
numerical_train <- extractNumeric(train[,!(names(train) %in% col_null)])
M <- cor(numerical_train)
corrplot(M, tl.cex = .3)
library(readr)
library(randomForest)
library(caret)
library(corrplot)
library(gridExtra)
library(ggplot2)
train <- read.csv("train.csv", stringsAsFactors=TRUE)
test  <- read.csv("test.csv",  stringsAsFactors=TRUE)
#Alley, PoolQC, Fence and MiscFeature have WAY more nulls than the other variables (>1000), so remove them
train<- train[,-c(7,73,74,75)]
nzv <- nearZeroVar(train, saveMetrics= TRUE)
badCols <- nearZeroVar(train)
train <- train[, -badCols]
numerical_train <- extractNumeric(train[,!(names(train) %in% col_null)])
install.packages("corrplot")
install.packages("gridExtra")
install.packages("ggplot2")
library(readr)
library(randomForest)
library(caret)
library(corrplot)
library(gridExtra)
library(ggplot2)
train <- read.csv("train.csv", stringsAsFactors=TRUE)
test  <- read.csv("test.csv",  stringsAsFactors=TRUE)
#Alley, PoolQC, Fence and MiscFeature have WAY more nulls than the other variables (>1000), so remove them
train<- train[,-c(7,73,74,75)]
nzv <- nearZeroVar(train, saveMetrics= TRUE)
badCols <- nearZeroVar(train)
train <- train[, -badCols]
numerical_train <- extractNumeric(train[,!(names(train) %in% col_null)])
M <- cor(numerical_train)
corrplot(M, tl.cex = .3)
numerical_train <- extractNumeric(train[,!(names(train) %in% col_null)])
numerical_train <- extractNumeric(train[,!(names(train) %in% col_null)])
M <- cor(numerical_train)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
install.packages("corrplot")
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
install.packages("lubridate")
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
source('~/GitHub/Datasets/House Prices/model_creation.R', echo=TRUE)
